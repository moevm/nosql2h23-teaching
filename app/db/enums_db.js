const locations = [
	'Адмиралтейский',
	'Василеостровский',
	'Выборгский',
	'Калининский',
	'Кировский',
	'Колпинский',
	'Комитет по культуре Санкт-Петербурга',
	'Красногвардейский',
	'Красносельский',
	'Кронштадтский',
	'Курортный',
	'Московский',
	'Невский',
	'Петроградский',
	'Петродворцовый',
	'Приморский',
	'Пушкинский',
	'Фрунзенский',
	'Центральный',
];

const types = [
	'Детские сады',
	'Образовательные учреждения',
	'Учреждения начального и среднего профессионального образования',
	'Учреждения дополнительного образования',
];

const subtypes = [
	'Дошкольные образовательные учреждения',
	'Образовательные учреждения дополнительного образования детей',
	'Образовательные учреждения высшего профессионального образования',
	'Образовательные учреждения для детей дошкольного и младшего школьного возраста',
	'Образовательные учреждения для детей, нуждающихся в психолого-педагогической и медико-социальной помощи',
	'Образовательные учреждения для детей-сирот и детей, оставшихся без попечения родителей',
	'Образовательные учреждения дополнительного профессионального образования',
	'Образовательные учреждения начального профессионального образования',
	'Образовательные учреждения среднего профессионального образования',
	'Общеобразовательные учреждения',
	'Общеобразовательные школы-интернаты',
	'Специальные (коррекционные) образовательные учреждения для обучающихся, воспитанников с отклонениями в развитии',
	'Специальные учебно-воспитательные учреждения для детей и подростков с девиантным поведением',
	'Суворовские военные, нахимовские военно-морские училища и кадетские (морские кадетские) корпуса',
];

const categories = [
	'Академия',
	'Гимназия',
	'Дворец',
	'Детский дом-школа-интернат для детей-сирот и детей, оставшихся без попечения родителей',
	'Детский сад',
	'Детский сад для детей раннего возраста',
	'Детский сад комбинированного вида',
	'Детский сад компенсирующего вида',
	'Детский сад общеразвивающего вида с приоритетным осуществлением деятельности по одному из направлений развития детей',
	'Детский сад присмотра и оздоровления',
	'Дом',
	'Институт',
	'Кадетская школа',
	'Кадетский корпус',
	'Колледж',
	'Курсы (школы, центры) повышения квалификации',
	'Лицей',
	'Морской кадетский корпус',
	'Нахимовское военно-морское училище',
	'Начальная общеобразовательная школа',
	'Начальная школа - детский сад',
	'Начальная школа - детский сад компенсирующего вида с осуществлением квалифицированной коррекции отклонений в физическом и психическом развитии воспитанников и обучающихся',
	'Общеобразовательная школа-интернат основного общего образования',
	'Общеобразовательная школа-интернат с углубленным изучением отдельных предметов',
	'Общеобразовательная школа-интернат среднего (полного) общего образования',
	'Основная общеобразовательная школа',
	'Прогимназия',
	'Профессиональное училище',
	'Профессиональный лицей',
	'Специальная (коррекционная) общеобразовательная школа',
	'Специальная (коррекционная) общеобразовательная школа-интернат',
	'Специальная (коррекционная) школа-интернат для детей-сирот и детей, оставшихся без попечения родителей, с отклонениями в развитии',
	'Специальная общеобразовательная школа',
	'Средняя общеобразовательная школа',
	'Средняя общеобразовательная школа с углубленным изучением предмета',
	'Суворовское военное училище',
	'Техникум',
	'Университет',
	'Центр',
	'Центр диагностики и консультирования',
	'Центр лечебной педагогики и дифференцированного обучения',
	'Центр образования',
	'Центр психолого-медико-социального сопровождения',
	'Центр психолого-педагогической реабилитации и коррекции',
	'Центр развития ребенка - детский сад',
];

export const orgLocationFromInd = (i) => locations[i];
export const orgLocationToInd = (str) => {
	return locations.findIndex((location) => location.includes(str));
};

export const orgTypeFromInd = (i) => types[i];
export const orgTypeToInd = (nameOrg) => {
	const orgTypeIndex = (str) => {
		return types.findIndex((type) => str.toLowerCase().includes(type.toLowerCase()));
	};

	if (nameOrg.toLowerCase().includes('дошкольное')) {
		return orgTypeIndex('Детские сады');
	} else if (nameOrg.toLowerCase().includes('общеобразовательн')) {
		return orgTypeIndex('Образовательные учреждения');
	} else if (nameOrg.toLowerCase().includes('профес')) {
		return orgTypeIndex('Учреждения начального и среднего профессионального образования');
	} else if (nameOrg.toLowerCase().includes('дополнительного')) {
		return orgTypeIndex('Учреждения дополнительного образования');
	}
	return orgTypeIndex('Образовательные учреждения');
};

export const orgSubtypeFromInd = (i) => subtypes[i];
export const orgSubtypeToInd = (str) => {
	return subtypes.findIndex((subtype) => subtype.includes(str));
};

export const orgCategoryFromInd = (i) => categories[i];
export const orgCategoryToInd = (str) => {
	return categories.findIndex((category) => category.includes(str));
};

export const enumLengths = () => {
	return {
		locations: locations.length,
		types: types.length,
		subtypes: subtypes.length,
		categories: categories.length,
	};
};
